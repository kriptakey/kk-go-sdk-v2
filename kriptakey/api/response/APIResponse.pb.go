// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: APIResponse.proto

package response

import (
	constants "github.com/kriptakey/kk-go-sdk-v24.1/kriptakey/constants"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FaultCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fault *FaultCode_Fault `protobuf:"bytes,1,opt,name=fault,proto3" json:"fault,omitempty"`
}

func (x *FaultCode) Reset() {
	*x = FaultCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultCode) ProtoMessage() {}

func (x *FaultCode) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultCode.ProtoReflect.Descriptor instead.
func (*FaultCode) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{0}
}

func (x *FaultCode) GetFault() *FaultCode_Fault {
	if x != nil {
		return x.Fault
	}
	return nil
}

type APIResponseLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionToken      string `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	AgentDN           string `protobuf:"bytes,2,opt,name=agentDN,proto3" json:"agentDN,omitempty"`
	LastUsedTime      int64  `protobuf:"varint,3,opt,name=lastUsedTime,proto3" json:"lastUsedTime,omitempty"`
	IdleTimeoutInMins uint32 `protobuf:"varint,4,opt,name=idleTimeoutInMins,proto3" json:"idleTimeoutInMins,omitempty"`
	ExpiredAt         int64  `protobuf:"varint,5,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *APIResponseLogin) Reset() {
	*x = APIResponseLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseLogin) ProtoMessage() {}

func (x *APIResponseLogin) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseLogin.ProtoReflect.Descriptor instead.
func (*APIResponseLogin) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{1}
}

func (x *APIResponseLogin) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *APIResponseLogin) GetAgentDN() string {
	if x != nil {
		return x.AgentDN
	}
	return ""
}

func (x *APIResponseLogin) GetLastUsedTime() int64 {
	if x != nil {
		return x.LastUsedTime
	}
	return 0
}

func (x *APIResponseLogin) GetIdleTimeoutInMins() uint32 {
	if x != nil {
		return x.IdleTimeoutInMins
	}
	return 0
}

func (x *APIResponseLogin) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type APIResponseRefreshSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionToken      string `protobuf:"bytes,1,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	AgentDN           string `protobuf:"bytes,2,opt,name=agentDN,proto3" json:"agentDN,omitempty"`
	LastUsedTime      int64  `protobuf:"varint,3,opt,name=lastUsedTime,proto3" json:"lastUsedTime,omitempty"`
	IdleTimeoutInMins uint32 `protobuf:"varint,4,opt,name=idleTimeoutInMins,proto3" json:"idleTimeoutInMins,omitempty"`
	ExpiredAt         int64  `protobuf:"varint,5,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
}

func (x *APIResponseRefreshSession) Reset() {
	*x = APIResponseRefreshSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseRefreshSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseRefreshSession) ProtoMessage() {}

func (x *APIResponseRefreshSession) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseRefreshSession.ProtoReflect.Descriptor instead.
func (*APIResponseRefreshSession) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{2}
}

func (x *APIResponseRefreshSession) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *APIResponseRefreshSession) GetAgentDN() string {
	if x != nil {
		return x.AgentDN
	}
	return ""
}

func (x *APIResponseRefreshSession) GetLastUsedTime() int64 {
	if x != nil {
		return x.LastUsedTime
	}
	return 0
}

func (x *APIResponseRefreshSession) GetIdleTimeoutInMins() uint32 {
	if x != nil {
		return x.IdleTimeoutInMins
	}
	return 0
}

func (x *APIResponseRefreshSession) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type APIResponseRNG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Random []uint32 `protobuf:"varint,1,rep,packed,name=random,proto3" json:"random,omitempty"`
}

func (x *APIResponseRNG) Reset() {
	*x = APIResponseRNG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseRNG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseRNG) ProtoMessage() {}

func (x *APIResponseRNG) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseRNG.ProtoReflect.Descriptor instead.
func (*APIResponseRNG) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{3}
}

func (x *APIResponseRNG) GetRandom() []uint32 {
	if x != nil {
		return x.Random
	}
	return nil
}

type APIResponseSeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []string `protobuf:"bytes,1,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseSeal) Reset() {
	*x = APIResponseSeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseSeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseSeal) ProtoMessage() {}

func (x *APIResponseSeal) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseSeal.ProtoReflect.Descriptor instead.
func (*APIResponseSeal) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{4}
}

func (x *APIResponseSeal) GetCiphertext() []string {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseUnseal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plaintext []string `protobuf:"bytes,1,rep,name=plaintext,proto3" json:"plaintext,omitempty"`
}

func (x *APIResponseUnseal) Reset() {
	*x = APIResponseUnseal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseUnseal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseUnseal) ProtoMessage() {}

func (x *APIResponseUnseal) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseUnseal.ProtoReflect.Descriptor instead.
func (*APIResponseUnseal) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{5}
}

func (x *APIResponseUnseal) GetPlaintext() []string {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type APIResponseSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *APIResponseSign) Reset() {
	*x = APIResponseSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseSign) ProtoMessage() {}

func (x *APIResponseSign) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseSign.ProtoReflect.Descriptor instead.
func (*APIResponseSign) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{6}
}

func (x *APIResponseSign) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type APIResponseVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified bool `protobuf:"varint,1,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *APIResponseVerify) Reset() {
	*x = APIResponseVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseVerify) ProtoMessage() {}

func (x *APIResponseVerify) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseVerify.ProtoReflect.Descriptor instead.
func (*APIResponseVerify) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{7}
}

func (x *APIResponseVerify) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type SingleCiphertext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string                  `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Mac               *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Iv                *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=iv,proto3" json:"iv,omitempty"`
	WrappedSessionKey *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=wrappedSessionKey,proto3" json:"wrappedSessionKey,omitempty"`
}

func (x *SingleCiphertext) Reset() {
	*x = SingleCiphertext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleCiphertext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleCiphertext) ProtoMessage() {}

func (x *SingleCiphertext) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleCiphertext.ProtoReflect.Descriptor instead.
func (*SingleCiphertext) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{8}
}

func (x *SingleCiphertext) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SingleCiphertext) GetMac() *wrapperspb.StringValue {
	if x != nil {
		return x.Mac
	}
	return nil
}

func (x *SingleCiphertext) GetIv() *wrapperspb.StringValue {
	if x != nil {
		return x.Iv
	}
	return nil
}

func (x *SingleCiphertext) GetWrappedSessionKey() *wrapperspb.StringValue {
	if x != nil {
		return x.WrappedSessionKey
	}
	return nil
}

type APIResponseEncrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyVersion *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=keyVersion,proto3" json:"keyVersion,omitempty"`
	Ciphertext []*SingleCiphertext     `protobuf:"bytes,2,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseEncrypt) Reset() {
	*x = APIResponseEncrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseEncrypt) ProtoMessage() {}

func (x *APIResponseEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseEncrypt.ProtoReflect.Descriptor instead.
func (*APIResponseEncrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{9}
}

func (x *APIResponseEncrypt) GetKeyVersion() *wrapperspb.UInt32Value {
	if x != nil {
		return x.KeyVersion
	}
	return nil
}

func (x *APIResponseEncrypt) GetCiphertext() []*SingleCiphertext {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseDecrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plaintext []string `protobuf:"bytes,1,rep,name=plaintext,proto3" json:"plaintext,omitempty"`
}

func (x *APIResponseDecrypt) Reset() {
	*x = APIResponseDecrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseDecrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseDecrypt) ProtoMessage() {}

func (x *APIResponseDecrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseDecrypt.ProtoReflect.Descriptor instead.
func (*APIResponseDecrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{10}
}

func (x *APIResponseDecrypt) GetPlaintext() []string {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type SingleMAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac string                  `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	Iv  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=iv,proto3" json:"iv,omitempty"`
}

func (x *SingleMAC) Reset() {
	*x = SingleMAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleMAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleMAC) ProtoMessage() {}

func (x *SingleMAC) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleMAC.ProtoReflect.Descriptor instead.
func (*SingleMAC) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{11}
}

func (x *SingleMAC) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *SingleMAC) GetIv() *wrapperspb.StringValue {
	if x != nil {
		return x.Iv
	}
	return nil
}

type APIResponseGenerateMAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac []*SingleMAC `protobuf:"bytes,1,rep,name=mac,proto3" json:"mac,omitempty"`
}

func (x *APIResponseGenerateMAC) Reset() {
	*x = APIResponseGenerateMAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseGenerateMAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseGenerateMAC) ProtoMessage() {}

func (x *APIResponseGenerateMAC) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseGenerateMAC.ProtoReflect.Descriptor instead.
func (*APIResponseGenerateMAC) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{12}
}

func (x *APIResponseGenerateMAC) GetMac() []*SingleMAC {
	if x != nil {
		return x.Mac
	}
	return nil
}

type APIResponseVerifyMAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified []*APIResponseVerifyMAC_Verified `protobuf:"bytes,1,rep,name=verified,proto3" json:"verified,omitempty"`
}

func (x *APIResponseVerifyMAC) Reset() {
	*x = APIResponseVerifyMAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseVerifyMAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseVerifyMAC) ProtoMessage() {}

func (x *APIResponseVerifyMAC) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseVerifyMAC.ProtoReflect.Descriptor instead.
func (*APIResponseVerifyMAC) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{13}
}

func (x *APIResponseVerifyMAC) GetVerified() []*APIResponseVerifyMAC_Verified {
	if x != nil {
		return x.Verified
	}
	return nil
}

type SingleTokenize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Metadata string `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *SingleTokenize) Reset() {
	*x = SingleTokenize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleTokenize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleTokenize) ProtoMessage() {}

func (x *SingleTokenize) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleTokenize.ProtoReflect.Descriptor instead.
func (*SingleTokenize) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{14}
}

func (x *SingleTokenize) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SingleTokenize) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type APIResponseTokenize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []*SingleTokenize `protobuf:"bytes,1,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseTokenize) Reset() {
	*x = APIResponseTokenize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseTokenize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseTokenize) ProtoMessage() {}

func (x *APIResponseTokenize) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseTokenize.ProtoReflect.Descriptor instead.
func (*APIResponseTokenize) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{15}
}

func (x *APIResponseTokenize) GetCiphertext() []*SingleTokenize {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseDetokenize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	Plaintext []string `protobuf:"bytes,1,rep,name=plaintext,proto3" json:"plaintext,omitempty"`
	Usv       []string `protobuf:"bytes,2,rep,name=usv,proto3" json:"usv,omitempty"`
}

func (x *APIResponseDetokenize) Reset() {
	*x = APIResponseDetokenize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseDetokenize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseDetokenize) ProtoMessage() {}

func (x *APIResponseDetokenize) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseDetokenize.ProtoReflect.Descriptor instead.
func (*APIResponseDetokenize) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{16}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *APIResponseDetokenize) GetPlaintext() []string {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

func (x *APIResponseDetokenize) GetUsv() []string {
	if x != nil {
		return x.Usv
	}
	return nil
}

type APIResponseKeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId             *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	KeyId              string                  `protobuf:"bytes,2,opt,name=keyId,proto3" json:"keyId,omitempty"`
	KeyLabel           string                  `protobuf:"bytes,3,opt,name=keyLabel,proto3" json:"keyLabel,omitempty"`
	KeyAlgo            string                  `protobuf:"bytes,4,opt,name=keyAlgo,proto3" json:"keyAlgo,omitempty"`
	KeyLength          uint32                  `protobuf:"varint,5,opt,name=keyLength,proto3" json:"keyLength,omitempty"`
	KeyPurpose         string                  `protobuf:"bytes,6,opt,name=keyPurpose,proto3" json:"keyPurpose,omitempty"`
	KeyVersion         *wrapperspb.UInt32Value `protobuf:"bytes,7,opt,name=keyVersion,proto3" json:"keyVersion,omitempty"`
	IsExtractable      string                  `protobuf:"bytes,8,opt,name=isExtractable,proto3" json:"isExtractable,omitempty"`
	IsRotatable        string                  `protobuf:"bytes,9,opt,name=isRotatable,proto3" json:"isRotatable,omitempty"`
	PublicKey          *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Modulus            *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=modulus,proto3" json:"modulus,omitempty"`
	Exponent           *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=exponent,proto3" json:"exponent,omitempty"`
	Certificate        *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=certificate,proto3" json:"certificate,omitempty"`
	CreationDate       uint32                  `protobuf:"varint,14,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	ExpiredAt          uint32                  `protobuf:"varint,15,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	EcPoint            *wrapperspb.StringValue `protobuf:"bytes,16,opt,name=ecPoint,proto3" json:"ecPoint,omitempty"`
	EcParams           *wrapperspb.StringValue `protobuf:"bytes,17,opt,name=ecParams,proto3" json:"ecParams,omitempty"`
	AutoRotateDuration *wrapperspb.UInt32Value `protobuf:"bytes,18,opt,name=autoRotateDuration,proto3" json:"autoRotateDuration,omitempty"`
	PartitionId        *wrapperspb.UInt32Value `protobuf:"bytes,19,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *APIResponseKeyInfo) Reset() {
	*x = APIResponseKeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseKeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseKeyInfo) ProtoMessage() {}

func (x *APIResponseKeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseKeyInfo.ProtoReflect.Descriptor instead.
func (*APIResponseKeyInfo) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{17}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *APIResponseKeyInfo) GetSlotId() *wrapperspb.UInt32Value {
	if x != nil {
		return x.SlotId
	}
	return nil
}

func (x *APIResponseKeyInfo) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *APIResponseKeyInfo) GetKeyLabel() string {
	if x != nil {
		return x.KeyLabel
	}
	return ""
}

func (x *APIResponseKeyInfo) GetKeyAlgo() string {
	if x != nil {
		return x.KeyAlgo
	}
	return ""
}

func (x *APIResponseKeyInfo) GetKeyLength() uint32 {
	if x != nil {
		return x.KeyLength
	}
	return 0
}

func (x *APIResponseKeyInfo) GetKeyPurpose() string {
	if x != nil {
		return x.KeyPurpose
	}
	return ""
}

func (x *APIResponseKeyInfo) GetKeyVersion() *wrapperspb.UInt32Value {
	if x != nil {
		return x.KeyVersion
	}
	return nil
}

func (x *APIResponseKeyInfo) GetIsExtractable() string {
	if x != nil {
		return x.IsExtractable
	}
	return ""
}

func (x *APIResponseKeyInfo) GetIsRotatable() string {
	if x != nil {
		return x.IsRotatable
	}
	return ""
}

func (x *APIResponseKeyInfo) GetPublicKey() *wrapperspb.StringValue {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *APIResponseKeyInfo) GetModulus() *wrapperspb.StringValue {
	if x != nil {
		return x.Modulus
	}
	return nil
}

func (x *APIResponseKeyInfo) GetExponent() *wrapperspb.StringValue {
	if x != nil {
		return x.Exponent
	}
	return nil
}

func (x *APIResponseKeyInfo) GetCertificate() *wrapperspb.StringValue {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *APIResponseKeyInfo) GetCreationDate() uint32 {
	if x != nil {
		return x.CreationDate
	}
	return 0
}

func (x *APIResponseKeyInfo) GetExpiredAt() uint32 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *APIResponseKeyInfo) GetEcPoint() *wrapperspb.StringValue {
	if x != nil {
		return x.EcPoint
	}
	return nil
}

func (x *APIResponseKeyInfo) GetEcParams() *wrapperspb.StringValue {
	if x != nil {
		return x.EcParams
	}
	return nil
}

func (x *APIResponseKeyInfo) GetAutoRotateDuration() *wrapperspb.UInt32Value {
	if x != nil {
		return x.AutoRotateDuration
	}
	return nil
}

func (x *APIResponseKeyInfo) GetPartitionId() *wrapperspb.UInt32Value {
	if x != nil {
		return x.PartitionId
	}
	return nil
}

type APIResponseGenerateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrappedKey  string                  `protobuf:"bytes,1,opt,name=wrappedKey,proto3" json:"wrappedKey,omitempty"`
	ZipPassword *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=zipPassword,proto3" json:"zipPassword,omitempty"`
	// Deprecated: Marked as deprecated in APIResponse.proto.
	WrappedKeyByExternalKey  *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=wrappedKeyByExternalKey,proto3" json:"wrappedKeyByExternalKey,omitempty"`
	WrappedKeyByAppstoredKey *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=wrappedKeyByAppstoredKey,proto3" json:"wrappedKeyByAppstoredKey,omitempty"`
}

func (x *APIResponseGenerateKey) Reset() {
	*x = APIResponseGenerateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseGenerateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseGenerateKey) ProtoMessage() {}

func (x *APIResponseGenerateKey) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseGenerateKey.ProtoReflect.Descriptor instead.
func (*APIResponseGenerateKey) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{18}
}

func (x *APIResponseGenerateKey) GetWrappedKey() string {
	if x != nil {
		return x.WrappedKey
	}
	return ""
}

func (x *APIResponseGenerateKey) GetZipPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.ZipPassword
	}
	return nil
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *APIResponseGenerateKey) GetWrappedKeyByExternalKey() *wrapperspb.StringValue {
	if x != nil {
		return x.WrappedKeyByExternalKey
	}
	return nil
}

func (x *APIResponseGenerateKey) GetWrappedKeyByAppstoredKey() *wrapperspb.StringValue {
	if x != nil {
		return x.WrappedKeyByAppstoredKey
	}
	return nil
}

type APIResponseGenerateKeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrappedPrivateKey string                  `protobuf:"bytes,1,opt,name=wrappedPrivateKey,proto3" json:"wrappedPrivateKey,omitempty"`
	PublicKeyOrCert   string                  `protobuf:"bytes,2,opt,name=publicKeyOrCert,proto3" json:"publicKeyOrCert,omitempty"`
	ZipPassword       *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=zipPassword,proto3" json:"zipPassword,omitempty"`
}

func (x *APIResponseGenerateKeyPair) Reset() {
	*x = APIResponseGenerateKeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseGenerateKeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseGenerateKeyPair) ProtoMessage() {}

func (x *APIResponseGenerateKeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseGenerateKeyPair.ProtoReflect.Descriptor instead.
func (*APIResponseGenerateKeyPair) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{19}
}

func (x *APIResponseGenerateKeyPair) GetWrappedPrivateKey() string {
	if x != nil {
		return x.WrappedPrivateKey
	}
	return ""
}

func (x *APIResponseGenerateKeyPair) GetPublicKeyOrCert() string {
	if x != nil {
		return x.PublicKeyOrCert
	}
	return ""
}

func (x *APIResponseGenerateKeyPair) GetZipPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.ZipPassword
	}
	return nil
}

type APIResponseCertificateSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PublicKey   string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *APIResponseCertificateSign) Reset() {
	*x = APIResponseCertificateSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseCertificateSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseCertificateSign) ProtoMessage() {}

func (x *APIResponseCertificateSign) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseCertificateSign.ProtoReflect.Descriptor instead.
func (*APIResponseCertificateSign) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{20}
}

func (x *APIResponseCertificateSign) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *APIResponseCertificateSign) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type APIResponseCertificateVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *APIResponseCertificateVerify) Reset() {
	*x = APIResponseCertificateVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseCertificateVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseCertificateVerify) ProtoMessage() {}

func (x *APIResponseCertificateVerify) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseCertificateVerify.ProtoReflect.Descriptor instead.
func (*APIResponseCertificateVerify) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{21}
}

func (x *APIResponseCertificateVerify) GetVerified() *wrapperspb.BoolValue {
	if x != nil {
		return x.Verified
	}
	return nil
}

type APIResponseAppstoredGenerateMAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac string                  `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	Iv  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=iv,proto3" json:"iv,omitempty"`
}

func (x *APIResponseAppstoredGenerateMAC) Reset() {
	*x = APIResponseAppstoredGenerateMAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredGenerateMAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredGenerateMAC) ProtoMessage() {}

func (x *APIResponseAppstoredGenerateMAC) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredGenerateMAC.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredGenerateMAC) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{22}
}

func (x *APIResponseAppstoredGenerateMAC) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *APIResponseAppstoredGenerateMAC) GetIv() *wrapperspb.StringValue {
	if x != nil {
		return x.Iv
	}
	return nil
}

type APIResponseAppstoredVerifyMAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *APIResponseAppstoredVerifyMAC) Reset() {
	*x = APIResponseAppstoredVerifyMAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredVerifyMAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredVerifyMAC) ProtoMessage() {}

func (x *APIResponseAppstoredVerifyMAC) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredVerifyMAC.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredVerifyMAC) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{23}
}

func (x *APIResponseAppstoredVerifyMAC) GetVerified() *wrapperspb.BoolValue {
	if x != nil {
		return x.Verified
	}
	return nil
}

type APIResponseAppstoredSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *APIResponseAppstoredSign) Reset() {
	*x = APIResponseAppstoredSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredSign) ProtoMessage() {}

func (x *APIResponseAppstoredSign) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredSign.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredSign) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{24}
}

func (x *APIResponseAppstoredSign) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type APIResponseAppstoredVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *APIResponseAppstoredVerify) Reset() {
	*x = APIResponseAppstoredVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredVerify) ProtoMessage() {}

func (x *APIResponseAppstoredVerify) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredVerify.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredVerify) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{25}
}

func (x *APIResponseAppstoredVerify) GetVerified() *wrapperspb.BoolValue {
	if x != nil {
		return x.Verified
	}
	return nil
}

type APIResponseAppstoredSeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []string `protobuf:"bytes,1,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseAppstoredSeal) Reset() {
	*x = APIResponseAppstoredSeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredSeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredSeal) ProtoMessage() {}

func (x *APIResponseAppstoredSeal) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredSeal.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredSeal) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{26}
}

func (x *APIResponseAppstoredSeal) GetCiphertext() []string {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseAppstoredUnseal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plaintext []string `protobuf:"bytes,1,rep,name=plaintext,proto3" json:"plaintext,omitempty"`
}

func (x *APIResponseAppstoredUnseal) Reset() {
	*x = APIResponseAppstoredUnseal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredUnseal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredUnseal) ProtoMessage() {}

func (x *APIResponseAppstoredUnseal) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredUnseal.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredUnseal) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{27}
}

func (x *APIResponseAppstoredUnseal) GetPlaintext() []string {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type APIResponseAppstoredEncrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []*SingleCiphertext `protobuf:"bytes,2,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseAppstoredEncrypt) Reset() {
	*x = APIResponseAppstoredEncrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredEncrypt) ProtoMessage() {}

func (x *APIResponseAppstoredEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredEncrypt.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredEncrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{28}
}

func (x *APIResponseAppstoredEncrypt) GetCiphertext() []*SingleCiphertext {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseAppstoredDecrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plaintext []string `protobuf:"bytes,1,rep,name=plaintext,proto3" json:"plaintext,omitempty"`
}

func (x *APIResponseAppstoredDecrypt) Reset() {
	*x = APIResponseAppstoredDecrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseAppstoredDecrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseAppstoredDecrypt) ProtoMessage() {}

func (x *APIResponseAppstoredDecrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseAppstoredDecrypt.ProtoReflect.Descriptor instead.
func (*APIResponseAppstoredDecrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{29}
}

func (x *APIResponseAppstoredDecrypt) GetPlaintext() []string {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type APIResponseGetSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretId    string `protobuf:"bytes,1,opt,name=secretId,proto3" json:"secretId,omitempty"`
	SecretLabel string `protobuf:"bytes,2,opt,name=secretLabel,proto3" json:"secretLabel,omitempty"`
	SecretData  string `protobuf:"bytes,3,opt,name=secretData,proto3" json:"secretData,omitempty"`
}

func (x *APIResponseGetSecret) Reset() {
	*x = APIResponseGetSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseGetSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseGetSecret) ProtoMessage() {}

func (x *APIResponseGetSecret) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseGetSecret.ProtoReflect.Descriptor instead.
func (*APIResponseGetSecret) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{30}
}

func (x *APIResponseGetSecret) GetSecretId() string {
	if x != nil {
		return x.SecretId
	}
	return ""
}

func (x *APIResponseGetSecret) GetSecretLabel() string {
	if x != nil {
		return x.SecretLabel
	}
	return ""
}

func (x *APIResponseGetSecret) GetSecretData() string {
	if x != nil {
		return x.SecretData
	}
	return ""
}

type E2EECiphertext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Mac  string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Iv   string `protobuf:"bytes,3,opt,name=iv,proto3" json:"iv,omitempty"`
}

func (x *E2EECiphertext) Reset() {
	*x = E2EECiphertext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2EECiphertext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2EECiphertext) ProtoMessage() {}

func (x *E2EECiphertext) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2EECiphertext.ProtoReflect.Descriptor instead.
func (*E2EECiphertext) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{31}
}

func (x *E2EECiphertext) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *E2EECiphertext) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *E2EECiphertext) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

type APIResponseE2EEReEncryptFromSessionKeyToPermanentKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyVersion *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=keyVersion,proto3" json:"keyVersion,omitempty"`
	Ciphertext []*E2EECiphertext       `protobuf:"bytes,2,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) Reset() {
	*x = APIResponseE2EEReEncryptFromSessionKeyToPermanentKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) ProtoMessage() {}

func (x *APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseE2EEReEncryptFromSessionKeyToPermanentKey.ProtoReflect.Descriptor instead.
func (*APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{32}
}

func (x *APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) GetKeyVersion() *wrapperspb.UInt32Value {
	if x != nil {
		return x.KeyVersion
	}
	return nil
}

func (x *APIResponseE2EEReEncryptFromSessionKeyToPermanentKey) GetCiphertext() []*E2EECiphertext {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseE2EECompare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equivalents []*APIResponseE2EECompare_Equivalent `protobuf:"bytes,1,rep,name=equivalents,proto3" json:"equivalents,omitempty"`
}

func (x *APIResponseE2EECompare) Reset() {
	*x = APIResponseE2EECompare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseE2EECompare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseE2EECompare) ProtoMessage() {}

func (x *APIResponseE2EECompare) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseE2EECompare.ProtoReflect.Descriptor instead.
func (*APIResponseE2EECompare) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{33}
}

func (x *APIResponseE2EECompare) GetEquivalents() []*APIResponseE2EECompare_Equivalent {
	if x != nil {
		return x.Equivalents
	}
	return nil
}

type APIResponseE2EEReEncryptFromPermanentKeyToSessionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []*E2EECiphertext `protobuf:"bytes,1,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseE2EEReEncryptFromPermanentKeyToSessionKey) Reset() {
	*x = APIResponseE2EEReEncryptFromPermanentKeyToSessionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseE2EEReEncryptFromPermanentKeyToSessionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseE2EEReEncryptFromPermanentKeyToSessionKey) ProtoMessage() {}

func (x *APIResponseE2EEReEncryptFromPermanentKeyToSessionKey) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseE2EEReEncryptFromPermanentKeyToSessionKey.ProtoReflect.Descriptor instead.
func (*APIResponseE2EEReEncryptFromPermanentKeyToSessionKey) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{34}
}

func (x *APIResponseE2EEReEncryptFromPermanentKeyToSessionKey) GetCiphertext() []*E2EECiphertext {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type APIResponseE2EEDecryptFromSessionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plaintext []string `protobuf:"bytes,1,rep,name=plaintext,proto3" json:"plaintext,omitempty"`
}

func (x *APIResponseE2EEDecryptFromSessionKey) Reset() {
	*x = APIResponseE2EEDecryptFromSessionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseE2EEDecryptFromSessionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseE2EEDecryptFromSessionKey) ProtoMessage() {}

func (x *APIResponseE2EEDecryptFromSessionKey) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseE2EEDecryptFromSessionKey.ProtoReflect.Descriptor instead.
func (*APIResponseE2EEDecryptFromSessionKey) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{35}
}

func (x *APIResponseE2EEDecryptFromSessionKey) GetPlaintext() []string {
	if x != nil {
		return x.Plaintext
	}
	return nil
}

type APIResponseE2EEEncryptToClientKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ciphertext []*E2EECiphertext `protobuf:"bytes,1,rep,name=ciphertext,proto3" json:"ciphertext,omitempty"`
}

func (x *APIResponseE2EEEncryptToClientKey) Reset() {
	*x = APIResponseE2EEEncryptToClientKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseE2EEEncryptToClientKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseE2EEEncryptToClientKey) ProtoMessage() {}

func (x *APIResponseE2EEEncryptToClientKey) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseE2EEEncryptToClientKey.ProtoReflect.Descriptor instead.
func (*APIResponseE2EEEncryptToClientKey) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{36}
}

func (x *APIResponseE2EEEncryptToClientKey) GetCiphertext() []*E2EECiphertext {
	if x != nil {
		return x.Ciphertext
	}
	return nil
}

type SDKResponseGeneral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SoftwareVersion []byte `protobuf:"bytes,1,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"`
	// Deprecated: Marked as deprecated in APIResponse.proto.
	SoftwareSandboxMode bool                        `protobuf:"varint,2,opt,name=softwareSandboxMode,proto3" json:"softwareSandboxMode,omitempty"`
	FaultCode           constants.FaultResponseCode `protobuf:"varint,3,opt,name=faultCode,proto3,enum=kk.core.constants.FaultResponseCode" json:"faultCode,omitempty"`
	SerializedPayload   []byte                      `protobuf:"bytes,4,opt,name=serializedPayload,proto3" json:"serializedPayload,omitempty"`
}

func (x *SDKResponseGeneral) Reset() {
	*x = SDKResponseGeneral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseGeneral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseGeneral) ProtoMessage() {}

func (x *SDKResponseGeneral) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseGeneral.ProtoReflect.Descriptor instead.
func (*SDKResponseGeneral) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{37}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseGeneral) GetSoftwareVersion() []byte {
	if x != nil {
		return x.SoftwareVersion
	}
	return nil
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseGeneral) GetSoftwareSandboxMode() bool {
	if x != nil {
		return x.SoftwareSandboxMode
	}
	return false
}

func (x *SDKResponseGeneral) GetFaultCode() constants.FaultResponseCode {
	if x != nil {
		return x.FaultCode
	}
	return constants.FaultResponseCode(0)
}

func (x *SDKResponseGeneral) GetSerializedPayload() []byte {
	if x != nil {
		return x.SerializedPayload
	}
	return nil
}

type SDKResponseInitEncrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId                       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken                 string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	KeyVersion                   uint32 `protobuf:"varint,3,opt,name=keyVersion,proto3" json:"keyVersion,omitempty"`
	SerializedAES256CBCProcessor []byte `protobuf:"bytes,4,opt,name=serializedAES256CBCProcessor,proto3" json:"serializedAES256CBCProcessor,omitempty"`
	Iv                           []byte `protobuf:"bytes,5,opt,name=iv,proto3" json:"iv,omitempty"`
	PartitionId                  uint32 `protobuf:"varint,6,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseInitEncrypt) Reset() {
	*x = SDKResponseInitEncrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseInitEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseInitEncrypt) ProtoMessage() {}

func (x *SDKResponseInitEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseInitEncrypt.ProtoReflect.Descriptor instead.
func (*SDKResponseInitEncrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{38}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseInitEncrypt) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseInitEncrypt) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseInitEncrypt) GetKeyVersion() uint32 {
	if x != nil {
		return x.KeyVersion
	}
	return 0
}

func (x *SDKResponseInitEncrypt) GetSerializedAES256CBCProcessor() []byte {
	if x != nil {
		return x.SerializedAES256CBCProcessor
	}
	return nil
}

func (x *SDKResponseInitEncrypt) GetIv() []byte {
	if x != nil {
		return x.Iv
	}
	return nil
}

func (x *SDKResponseInitEncrypt) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseInitDecrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId                       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken                 string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	SerializedAES256CBCProcessor []byte `protobuf:"bytes,3,opt,name=serializedAES256CBCProcessor,proto3" json:"serializedAES256CBCProcessor,omitempty"`
	PartitionId                  uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseInitDecrypt) Reset() {
	*x = SDKResponseInitDecrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseInitDecrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseInitDecrypt) ProtoMessage() {}

func (x *SDKResponseInitDecrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseInitDecrypt.ProtoReflect.Descriptor instead.
func (*SDKResponseInitDecrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{39}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseInitDecrypt) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseInitDecrypt) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseInitDecrypt) GetSerializedAES256CBCProcessor() []byte {
	if x != nil {
		return x.SerializedAES256CBCProcessor
	}
	return nil
}

func (x *SDKResponseInitDecrypt) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseMultipartUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId                       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken                 string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	SerializedAES256CBCProcessor []byte `protobuf:"bytes,3,opt,name=serializedAES256CBCProcessor,proto3" json:"serializedAES256CBCProcessor,omitempty"`
	UpdateResult                 []byte `protobuf:"bytes,4,opt,name=updateResult,proto3" json:"updateResult,omitempty"`
	PartitionId                  uint32 `protobuf:"varint,5,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseMultipartUpdate) Reset() {
	*x = SDKResponseMultipartUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseMultipartUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseMultipartUpdate) ProtoMessage() {}

func (x *SDKResponseMultipartUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseMultipartUpdate.ProtoReflect.Descriptor instead.
func (*SDKResponseMultipartUpdate) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{40}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseMultipartUpdate) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseMultipartUpdate) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseMultipartUpdate) GetSerializedAES256CBCProcessor() []byte {
	if x != nil {
		return x.SerializedAES256CBCProcessor
	}
	return nil
}

func (x *SDKResponseMultipartUpdate) GetUpdateResult() []byte {
	if x != nil {
		return x.UpdateResult
	}
	return nil
}

func (x *SDKResponseMultipartUpdate) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseFinalizeEncrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId            uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken      string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	FinalEncryptBlock []byte `protobuf:"bytes,3,opt,name=finalEncryptBlock,proto3" json:"finalEncryptBlock,omitempty"`
	Tag               []byte `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	PartitionId       uint32 `protobuf:"varint,5,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseFinalizeEncrypt) Reset() {
	*x = SDKResponseFinalizeEncrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseFinalizeEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseFinalizeEncrypt) ProtoMessage() {}

func (x *SDKResponseFinalizeEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseFinalizeEncrypt.ProtoReflect.Descriptor instead.
func (*SDKResponseFinalizeEncrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{41}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseFinalizeEncrypt) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseFinalizeEncrypt) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseFinalizeEncrypt) GetFinalEncryptBlock() []byte {
	if x != nil {
		return x.FinalEncryptBlock
	}
	return nil
}

func (x *SDKResponseFinalizeEncrypt) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *SDKResponseFinalizeEncrypt) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseFinalizeDecrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId            uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken      string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	FinalDecryptBlock []byte `protobuf:"bytes,3,opt,name=finalDecryptBlock,proto3" json:"finalDecryptBlock,omitempty"`
	PartitionId       uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseFinalizeDecrypt) Reset() {
	*x = SDKResponseFinalizeDecrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseFinalizeDecrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseFinalizeDecrypt) ProtoMessage() {}

func (x *SDKResponseFinalizeDecrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseFinalizeDecrypt.ProtoReflect.Descriptor instead.
func (*SDKResponseFinalizeDecrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{42}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseFinalizeDecrypt) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseFinalizeDecrypt) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseFinalizeDecrypt) GetFinalDecryptBlock() []byte {
	if x != nil {
		return x.FinalDecryptBlock
	}
	return nil
}

func (x *SDKResponseFinalizeDecrypt) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseDecryptCBC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId         uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken   string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	BlockPlaintext []byte `protobuf:"bytes,3,opt,name=blockPlaintext,proto3" json:"blockPlaintext,omitempty"`
	SequenceId     uint32 `protobuf:"varint,4,opt,name=sequenceId,proto3" json:"sequenceId,omitempty"`
	PartitionId    uint32 `protobuf:"varint,5,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseDecryptCBC) Reset() {
	*x = SDKResponseDecryptCBC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseDecryptCBC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseDecryptCBC) ProtoMessage() {}

func (x *SDKResponseDecryptCBC) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseDecryptCBC.ProtoReflect.Descriptor instead.
func (*SDKResponseDecryptCBC) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{43}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseDecryptCBC) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseDecryptCBC) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseDecryptCBC) GetBlockPlaintext() []byte {
	if x != nil {
		return x.BlockPlaintext
	}
	return nil
}

func (x *SDKResponseDecryptCBC) GetSequenceId() uint32 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

func (x *SDKResponseDecryptCBC) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseInitMACGenerate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId                        uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken                  string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	SerializedHMACSHA256Processor []byte `protobuf:"bytes,3,opt,name=serializedHMACSHA256Processor,proto3" json:"serializedHMACSHA256Processor,omitempty"`
	PartitionId                   uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseInitMACGenerate) Reset() {
	*x = SDKResponseInitMACGenerate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseInitMACGenerate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseInitMACGenerate) ProtoMessage() {}

func (x *SDKResponseInitMACGenerate) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseInitMACGenerate.ProtoReflect.Descriptor instead.
func (*SDKResponseInitMACGenerate) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{44}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseInitMACGenerate) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseInitMACGenerate) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseInitMACGenerate) GetSerializedHMACSHA256Processor() []byte {
	if x != nil {
		return x.SerializedHMACSHA256Processor
	}
	return nil
}

func (x *SDKResponseInitMACGenerate) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseInitMACVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId                        uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken                  string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	SerializedHMACSHA256Processor []byte `protobuf:"bytes,3,opt,name=serializedHMACSHA256Processor,proto3" json:"serializedHMACSHA256Processor,omitempty"`
	PartitionId                   uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseInitMACVerify) Reset() {
	*x = SDKResponseInitMACVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseInitMACVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseInitMACVerify) ProtoMessage() {}

func (x *SDKResponseInitMACVerify) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseInitMACVerify.ProtoReflect.Descriptor instead.
func (*SDKResponseInitMACVerify) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{45}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseInitMACVerify) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseInitMACVerify) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseInitMACVerify) GetSerializedHMACSHA256Processor() []byte {
	if x != nil {
		return x.SerializedHMACSHA256Processor
	}
	return nil
}

func (x *SDKResponseInitMACVerify) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseMultipartMACUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId                        uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken                  string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	SerializedHMACSHA256Processor []byte `protobuf:"bytes,3,opt,name=serializedHMACSHA256Processor,proto3" json:"serializedHMACSHA256Processor,omitempty"`
	PartitionId                   uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseMultipartMACUpdate) Reset() {
	*x = SDKResponseMultipartMACUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseMultipartMACUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseMultipartMACUpdate) ProtoMessage() {}

func (x *SDKResponseMultipartMACUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseMultipartMACUpdate.ProtoReflect.Descriptor instead.
func (*SDKResponseMultipartMACUpdate) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{46}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseMultipartMACUpdate) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseMultipartMACUpdate) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseMultipartMACUpdate) GetSerializedHMACSHA256Processor() []byte {
	if x != nil {
		return x.SerializedHMACSHA256Processor
	}
	return nil
}

func (x *SDKResponseMultipartMACUpdate) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseFinalizeMACGenerate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Tag          []byte `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	PartitionId  uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseFinalizeMACGenerate) Reset() {
	*x = SDKResponseFinalizeMACGenerate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseFinalizeMACGenerate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseFinalizeMACGenerate) ProtoMessage() {}

func (x *SDKResponseFinalizeMACGenerate) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseFinalizeMACGenerate.ProtoReflect.Descriptor instead.
func (*SDKResponseFinalizeMACGenerate) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{47}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseFinalizeMACGenerate) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseFinalizeMACGenerate) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseFinalizeMACGenerate) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *SDKResponseFinalizeMACGenerate) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseFinalizeMACVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Verified     bool   `protobuf:"varint,3,opt,name=verified,proto3" json:"verified,omitempty"`
	PartitionId  uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseFinalizeMACVerify) Reset() {
	*x = SDKResponseFinalizeMACVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseFinalizeMACVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseFinalizeMACVerify) ProtoMessage() {}

func (x *SDKResponseFinalizeMACVerify) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseFinalizeMACVerify.ProtoReflect.Descriptor instead.
func (*SDKResponseFinalizeMACVerify) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{48}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseFinalizeMACVerify) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseFinalizeMACVerify) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseFinalizeMACVerify) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *SDKResponseFinalizeMACVerify) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseMultipartEncrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	KeyVersion   uint32 `protobuf:"varint,3,opt,name=keyVersion,proto3" json:"keyVersion,omitempty"`
	Iv           []byte `protobuf:"bytes,4,opt,name=iv,proto3" json:"iv,omitempty"`
	Tag          []byte `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	PartitionId  uint32 `protobuf:"varint,6,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseMultipartEncrypt) Reset() {
	*x = SDKResponseMultipartEncrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseMultipartEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseMultipartEncrypt) ProtoMessage() {}

func (x *SDKResponseMultipartEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseMultipartEncrypt.ProtoReflect.Descriptor instead.
func (*SDKResponseMultipartEncrypt) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{49}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseMultipartEncrypt) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseMultipartEncrypt) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseMultipartEncrypt) GetKeyVersion() uint32 {
	if x != nil {
		return x.KeyVersion
	}
	return 0
}

func (x *SDKResponseMultipartEncrypt) GetIv() []byte {
	if x != nil {
		return x.Iv
	}
	return nil
}

func (x *SDKResponseMultipartEncrypt) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *SDKResponseMultipartEncrypt) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseMultipartHMACGenerate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Tag          []byte `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	PartitionId  uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseMultipartHMACGenerate) Reset() {
	*x = SDKResponseMultipartHMACGenerate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseMultipartHMACGenerate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseMultipartHMACGenerate) ProtoMessage() {}

func (x *SDKResponseMultipartHMACGenerate) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseMultipartHMACGenerate.ProtoReflect.Descriptor instead.
func (*SDKResponseMultipartHMACGenerate) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{50}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseMultipartHMACGenerate) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseMultipartHMACGenerate) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseMultipartHMACGenerate) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *SDKResponseMultipartHMACGenerate) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseMultipartHMACVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in APIResponse.proto.
	SlotId       uint32 `protobuf:"varint,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	SessionToken string `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Verified     bool   `protobuf:"varint,3,opt,name=verified,proto3" json:"verified,omitempty"`
	PartitionId  uint32 `protobuf:"varint,4,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
}

func (x *SDKResponseMultipartHMACVerify) Reset() {
	*x = SDKResponseMultipartHMACVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseMultipartHMACVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseMultipartHMACVerify) ProtoMessage() {}

func (x *SDKResponseMultipartHMACVerify) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseMultipartHMACVerify.ProtoReflect.Descriptor instead.
func (*SDKResponseMultipartHMACVerify) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{51}
}

// Deprecated: Marked as deprecated in APIResponse.proto.
func (x *SDKResponseMultipartHMACVerify) GetSlotId() uint32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *SDKResponseMultipartHMACVerify) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *SDKResponseMultipartHMACVerify) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *SDKResponseMultipartHMACVerify) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type SDKResponseEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stub uint32 `protobuf:"varint,999,opt,name=stub,proto3" json:"stub,omitempty"`
}

func (x *SDKResponseEmpty) Reset() {
	*x = SDKResponseEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDKResponseEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDKResponseEmpty) ProtoMessage() {}

func (x *SDKResponseEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDKResponseEmpty.ProtoReflect.Descriptor instead.
func (*SDKResponseEmpty) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{52}
}

func (x *SDKResponseEmpty) GetStub() uint32 {
	if x != nil {
		return x.Stub
	}
	return 0
}

type FaultCode_Fault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code constants.FaultResponseCode `protobuf:"varint,1,opt,name=code,proto3,enum=kk.core.constants.FaultResponseCode" json:"code,omitempty"`
}

func (x *FaultCode_Fault) Reset() {
	*x = FaultCode_Fault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultCode_Fault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultCode_Fault) ProtoMessage() {}

func (x *FaultCode_Fault) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultCode_Fault.ProtoReflect.Descriptor instead.
func (*FaultCode_Fault) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FaultCode_Fault) GetCode() constants.FaultResponseCode {
	if x != nil {
		return x.Code
	}
	return constants.FaultResponseCode(0)
}

type APIResponseVerifyMAC_Verified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verified *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *APIResponseVerifyMAC_Verified) Reset() {
	*x = APIResponseVerifyMAC_Verified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseVerifyMAC_Verified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseVerifyMAC_Verified) ProtoMessage() {}

func (x *APIResponseVerifyMAC_Verified) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseVerifyMAC_Verified.ProtoReflect.Descriptor instead.
func (*APIResponseVerifyMAC_Verified) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{13, 0}
}

func (x *APIResponseVerifyMAC_Verified) GetVerified() *wrapperspb.BoolValue {
	if x != nil {
		return x.Verified
	}
	return nil
}

type APIResponseE2EECompare_Equivalent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equivalent *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=equivalent,proto3" json:"equivalent,omitempty"`
}

func (x *APIResponseE2EECompare_Equivalent) Reset() {
	*x = APIResponseE2EECompare_Equivalent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_APIResponse_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponseE2EECompare_Equivalent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponseE2EECompare_Equivalent) ProtoMessage() {}

func (x *APIResponseE2EECompare_Equivalent) ProtoReflect() protoreflect.Message {
	mi := &file_APIResponse_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponseE2EECompare_Equivalent.ProtoReflect.Descriptor instead.
func (*APIResponseE2EECompare_Equivalent) Descriptor() ([]byte, []int) {
	return file_APIResponse_proto_rawDescGZIP(), []int{33, 0}
}

func (x *APIResponseE2EECompare_Equivalent) GetEquivalent() *wrapperspb.BoolValue {
	if x != nil {
		return x.Equivalent
	}
	return nil
}

var File_APIResponse_proto protoreflect.FileDescriptor

var file_APIResponse_proto_rawDesc = []byte{
	0x0a, 0x11, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0f, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x09, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x1a, 0x41, 0x0a, 0x05, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6b, 0x6b, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x4e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x69,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x19, 0x41, 0x50,
	0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x44, 0x4e, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x64, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x69, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x4d, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x4e, 0x47, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x22,
	0x31, 0x0a, 0x0f, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65,
	0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x31, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x55, 0x6e, 0x73, 0x65, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x2f, 0x0a, 0x0f, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2f, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6d, 0x61, 0x63,
	0x12, 0x2c, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x76, 0x12, 0x4a,
	0x0a, 0x11, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x99, 0x01, 0x0a, 0x12, 0x41,
	0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x45, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x32, 0x0a, 0x12, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x4b, 0x0a, 0x09, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x41, 0x43, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x76, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x76, 0x22, 0x4a, 0x0a, 0x16, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x41,
	0x43, 0x12, 0x30, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x41, 0x43, 0x52, 0x03,
	0x6d, 0x61, 0x63, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x41, 0x43, 0x12, 0x4e, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x41, 0x43, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x1a, 0x42, 0x0a, 0x08,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0x42, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x13, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x69, 0x7a, 0x65, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x4b, 0x0a, 0x15, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x65, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x73, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x75, 0x73, 0x76, 0x22, 0x8e, 0x07,
	0x0a, 0x12, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4b, 0x65, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x41, 0x6c, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6b,
	0x65, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x50,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65,
	0x79, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x75, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x36,
	0x0a, 0x07, 0x65, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65,
	0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x65, 0x63, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x4c, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xae,
	0x02, 0x0a, 0x16, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x7a, 0x69, 0x70,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x7a, 0x69,
	0x70, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x5a, 0x0a, 0x17, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x17, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x58, 0x0a, 0x18, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x18, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x42, 0x79, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x22,
	0xb4, 0x01, 0x0a, 0x1a, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x2c,
	0x0a, 0x11, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x43, 0x65, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x4f, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x7a, 0x69, 0x70, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x7a, 0x69, 0x70, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5c, 0x0a, 0x1a, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x22, 0x56, 0x0a, 0x1c, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x61, 0x0a, 0x1f,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x41, 0x43, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61,
	0x63, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x76, 0x22,
	0x57, 0x0a, 0x1d, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x41, 0x43,
	0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x38, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x54, 0x0a, 0x1a, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x3a, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64,
	0x53, 0x65, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x1a, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x55, 0x6e, 0x73, 0x65,
	0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x64, 0x0a, 0x1b, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12,
	0x45, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3b, 0x0a, 0x1b, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x74, 0x0a, 0x14, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x0e, 0x45, 0x32, 0x45,
	0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x76, 0x22, 0xb9, 0x01, 0x0a, 0x34, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x32, 0x45, 0x45, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x54, 0x6f, 0x50, 0x65,
	0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x6b, 0x65,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6b, 0x65,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b,
	0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x32, 0x45, 0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0xbc, 0x01,
	0x0a, 0x16, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x32, 0x45,
	0x45, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x65, 0x71, 0x75, 0x69,
	0x76, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x6b, 0x6b, 0x2e, 0x6b, 0x6b, 0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x32, 0x45, 0x45, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x76,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x45, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x34,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x32, 0x45, 0x45, 0x52,
	0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x54, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x32, 0x45, 0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0x44, 0x0a, 0x24, 0x41, 0x50, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x32, 0x45, 0x45, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x68, 0x0a, 0x21, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x32,
	0x45, 0x45, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x6b, 0x2e, 0x6b, 0x6b,
	0x63, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x32, 0x45, 0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x74, 0x65, 0x78, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x12, 0x53, 0x44,
	0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x73,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x13, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x13, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6b, 0x6b, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x16, 0x53, 0x44, 0x4b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x1c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41,
	0x45, 0x53, 0x32, 0x35, 0x36, 0x43, 0x42, 0x43, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x43, 0x42, 0x43, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x02, 0x69, 0x76, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x16, 0x53, 0x44, 0x4b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x42, 0x0a, 0x1c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x43, 0x42, 0x43, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x43, 0x42, 0x43, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x1a, 0x53, 0x44, 0x4b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x42, 0x0a, 0x1c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x43, 0x42, 0x43, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1c, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x45, 0x53, 0x32, 0x35, 0x36, 0x43,
	0x42, 0x43, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xbe, 0x01, 0x0a, 0x1a, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x43, 0x42, 0x43, 0x12, 0x1a, 0x0a, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x1a, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x41, 0x43, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32, 0x35,
	0x36, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a,
	0x18, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x4d, 0x41, 0x43, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32, 0x35,
	0x36, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x1d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x4d, 0x41, 0x43,
	0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xc7, 0x01, 0x0a, 0x1d, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x4d, 0x41, 0x43, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1d, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x4d, 0x41, 0x43, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x1e,
	0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x4d, 0x41, 0x43, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x4d, 0x41, 0x43, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x76, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x20, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x48, 0x4d,
	0x41, 0x43, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9e,
	0x01, 0x0a, 0x1e, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x48, 0x4d, 0x41, 0x43, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x27, 0x0a, 0x10, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x13, 0x0a, 0x04, 0x73, 0x74, 0x75, 0x62, 0x18, 0xe7, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x73, 0x74, 0x75, 0x62, 0x42, 0x53, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x69, 0x70, 0x74, 0x61, 0x6b, 0x65, 0x79,
	0x2f, 0x6b, 0x6b, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x76, 0x32, 0x34, 0x2e, 0x31,
	0x2f, 0x6b, 0x72, 0x69, 0x70, 0x74, 0x61, 0x6b, 0x65, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xaa, 0x02, 0x13, 0x4b, 0x4b, 0x2e, 0x4b, 0x4b, 0x43,
	0x53, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_APIResponse_proto_rawDescOnce sync.Once
	file_APIResponse_proto_rawDescData = file_APIResponse_proto_rawDesc
)

func file_APIResponse_proto_rawDescGZIP() []byte {
	file_APIResponse_proto_rawDescOnce.Do(func() {
		file_APIResponse_proto_rawDescData = protoimpl.X.CompressGZIP(file_APIResponse_proto_rawDescData)
	})
	return file_APIResponse_proto_rawDescData
}

var file_APIResponse_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_APIResponse_proto_goTypes = []interface{}{
	(*FaultCode)(nil),                                            // 0: kk.kkcs.apiresponse.FaultCode
	(*APIResponseLogin)(nil),                                     // 1: kk.kkcs.apiresponse.APIResponseLogin
	(*APIResponseRefreshSession)(nil),                            // 2: kk.kkcs.apiresponse.APIResponseRefreshSession
	(*APIResponseRNG)(nil),                                       // 3: kk.kkcs.apiresponse.APIResponseRNG
	(*APIResponseSeal)(nil),                                      // 4: kk.kkcs.apiresponse.APIResponseSeal
	(*APIResponseUnseal)(nil),                                    // 5: kk.kkcs.apiresponse.APIResponseUnseal
	(*APIResponseSign)(nil),                                      // 6: kk.kkcs.apiresponse.APIResponseSign
	(*APIResponseVerify)(nil),                                    // 7: kk.kkcs.apiresponse.APIResponseVerify
	(*SingleCiphertext)(nil),                                     // 8: kk.kkcs.apiresponse.SingleCiphertext
	(*APIResponseEncrypt)(nil),                                   // 9: kk.kkcs.apiresponse.APIResponseEncrypt
	(*APIResponseDecrypt)(nil),                                   // 10: kk.kkcs.apiresponse.APIResponseDecrypt
	(*SingleMAC)(nil),                                            // 11: kk.kkcs.apiresponse.SingleMAC
	(*APIResponseGenerateMAC)(nil),                               // 12: kk.kkcs.apiresponse.APIResponseGenerateMAC
	(*APIResponseVerifyMAC)(nil),                                 // 13: kk.kkcs.apiresponse.APIResponseVerifyMAC
	(*SingleTokenize)(nil),                                       // 14: kk.kkcs.apiresponse.SingleTokenize
	(*APIResponseTokenize)(nil),                                  // 15: kk.kkcs.apiresponse.APIResponseTokenize
	(*APIResponseDetokenize)(nil),                                // 16: kk.kkcs.apiresponse.APIResponseDetokenize
	(*APIResponseKeyInfo)(nil),                                   // 17: kk.kkcs.apiresponse.APIResponseKeyInfo
	(*APIResponseGenerateKey)(nil),                               // 18: kk.kkcs.apiresponse.APIResponseGenerateKey
	(*APIResponseGenerateKeyPair)(nil),                           // 19: kk.kkcs.apiresponse.APIResponseGenerateKeyPair
	(*APIResponseCertificateSign)(nil),                           // 20: kk.kkcs.apiresponse.APIResponseCertificateSign
	(*APIResponseCertificateVerify)(nil),                         // 21: kk.kkcs.apiresponse.APIResponseCertificateVerify
	(*APIResponseAppstoredGenerateMAC)(nil),                      // 22: kk.kkcs.apiresponse.APIResponseAppstoredGenerateMAC
	(*APIResponseAppstoredVerifyMAC)(nil),                        // 23: kk.kkcs.apiresponse.APIResponseAppstoredVerifyMAC
	(*APIResponseAppstoredSign)(nil),                             // 24: kk.kkcs.apiresponse.APIResponseAppstoredSign
	(*APIResponseAppstoredVerify)(nil),                           // 25: kk.kkcs.apiresponse.APIResponseAppstoredVerify
	(*APIResponseAppstoredSeal)(nil),                             // 26: kk.kkcs.apiresponse.APIResponseAppstoredSeal
	(*APIResponseAppstoredUnseal)(nil),                           // 27: kk.kkcs.apiresponse.APIResponseAppstoredUnseal
	(*APIResponseAppstoredEncrypt)(nil),                          // 28: kk.kkcs.apiresponse.APIResponseAppstoredEncrypt
	(*APIResponseAppstoredDecrypt)(nil),                          // 29: kk.kkcs.apiresponse.APIResponseAppstoredDecrypt
	(*APIResponseGetSecret)(nil),                                 // 30: kk.kkcs.apiresponse.APIResponseGetSecret
	(*E2EECiphertext)(nil),                                       // 31: kk.kkcs.apiresponse.E2EECiphertext
	(*APIResponseE2EEReEncryptFromSessionKeyToPermanentKey)(nil), // 32: kk.kkcs.apiresponse.APIResponseE2EEReEncryptFromSessionKeyToPermanentKey
	(*APIResponseE2EECompare)(nil),                               // 33: kk.kkcs.apiresponse.APIResponseE2EECompare
	(*APIResponseE2EEReEncryptFromPermanentKeyToSessionKey)(nil), // 34: kk.kkcs.apiresponse.APIResponseE2EEReEncryptFromPermanentKeyToSessionKey
	(*APIResponseE2EEDecryptFromSessionKey)(nil),                 // 35: kk.kkcs.apiresponse.APIResponseE2EEDecryptFromSessionKey
	(*APIResponseE2EEEncryptToClientKey)(nil),                    // 36: kk.kkcs.apiresponse.APIResponseE2EEEncryptToClientKey
	(*SDKResponseGeneral)(nil),                                   // 37: kk.kkcs.apiresponse.SDKResponseGeneral
	(*SDKResponseInitEncrypt)(nil),                               // 38: kk.kkcs.apiresponse.SDKResponseInitEncrypt
	(*SDKResponseInitDecrypt)(nil),                               // 39: kk.kkcs.apiresponse.SDKResponseInitDecrypt
	(*SDKResponseMultipartUpdate)(nil),                           // 40: kk.kkcs.apiresponse.SDKResponseMultipartUpdate
	(*SDKResponseFinalizeEncrypt)(nil),                           // 41: kk.kkcs.apiresponse.SDKResponseFinalizeEncrypt
	(*SDKResponseFinalizeDecrypt)(nil),                           // 42: kk.kkcs.apiresponse.SDKResponseFinalizeDecrypt
	(*SDKResponseDecryptCBC)(nil),                                // 43: kk.kkcs.apiresponse.SDKResponseDecryptCBC
	(*SDKResponseInitMACGenerate)(nil),                           // 44: kk.kkcs.apiresponse.SDKResponseInitMACGenerate
	(*SDKResponseInitMACVerify)(nil),                             // 45: kk.kkcs.apiresponse.SDKResponseInitMACVerify
	(*SDKResponseMultipartMACUpdate)(nil),                        // 46: kk.kkcs.apiresponse.SDKResponseMultipartMACUpdate
	(*SDKResponseFinalizeMACGenerate)(nil),                       // 47: kk.kkcs.apiresponse.SDKResponseFinalizeMACGenerate
	(*SDKResponseFinalizeMACVerify)(nil),                         // 48: kk.kkcs.apiresponse.SDKResponseFinalizeMACVerify
	(*SDKResponseMultipartEncrypt)(nil),                          // 49: kk.kkcs.apiresponse.SDKResponseMultipartEncrypt
	(*SDKResponseMultipartHMACGenerate)(nil),                     // 50: kk.kkcs.apiresponse.SDKResponseMultipartHMACGenerate
	(*SDKResponseMultipartHMACVerify)(nil),                       // 51: kk.kkcs.apiresponse.SDKResponseMultipartHMACVerify
	(*SDKResponseEmpty)(nil),                                     // 52: kk.kkcs.apiresponse.SDKResponseEmpty
	(*FaultCode_Fault)(nil),                                      // 53: kk.kkcs.apiresponse.FaultCode.Fault
	(*APIResponseVerifyMAC_Verified)(nil),                        // 54: kk.kkcs.apiresponse.APIResponseVerifyMAC.Verified
	(*APIResponseE2EECompare_Equivalent)(nil),                    // 55: kk.kkcs.apiresponse.APIResponseE2EECompare.Equivalent
	(*wrapperspb.StringValue)(nil),                               // 56: google.protobuf.StringValue
	(*wrapperspb.UInt32Value)(nil),                               // 57: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),                                 // 58: google.protobuf.BoolValue
	(constants.FaultResponseCode)(0),                             // 59: kk.core.constants.FaultResponseCode
}
var file_APIResponse_proto_depIdxs = []int32{
	53, // 0: kk.kkcs.apiresponse.FaultCode.fault:type_name -> kk.kkcs.apiresponse.FaultCode.Fault
	56, // 1: kk.kkcs.apiresponse.SingleCiphertext.mac:type_name -> google.protobuf.StringValue
	56, // 2: kk.kkcs.apiresponse.SingleCiphertext.iv:type_name -> google.protobuf.StringValue
	56, // 3: kk.kkcs.apiresponse.SingleCiphertext.wrappedSessionKey:type_name -> google.protobuf.StringValue
	57, // 4: kk.kkcs.apiresponse.APIResponseEncrypt.keyVersion:type_name -> google.protobuf.UInt32Value
	8,  // 5: kk.kkcs.apiresponse.APIResponseEncrypt.ciphertext:type_name -> kk.kkcs.apiresponse.SingleCiphertext
	56, // 6: kk.kkcs.apiresponse.SingleMAC.iv:type_name -> google.protobuf.StringValue
	11, // 7: kk.kkcs.apiresponse.APIResponseGenerateMAC.mac:type_name -> kk.kkcs.apiresponse.SingleMAC
	54, // 8: kk.kkcs.apiresponse.APIResponseVerifyMAC.verified:type_name -> kk.kkcs.apiresponse.APIResponseVerifyMAC.Verified
	14, // 9: kk.kkcs.apiresponse.APIResponseTokenize.ciphertext:type_name -> kk.kkcs.apiresponse.SingleTokenize
	57, // 10: kk.kkcs.apiresponse.APIResponseKeyInfo.slotId:type_name -> google.protobuf.UInt32Value
	57, // 11: kk.kkcs.apiresponse.APIResponseKeyInfo.keyVersion:type_name -> google.protobuf.UInt32Value
	56, // 12: kk.kkcs.apiresponse.APIResponseKeyInfo.publicKey:type_name -> google.protobuf.StringValue
	56, // 13: kk.kkcs.apiresponse.APIResponseKeyInfo.modulus:type_name -> google.protobuf.StringValue
	56, // 14: kk.kkcs.apiresponse.APIResponseKeyInfo.exponent:type_name -> google.protobuf.StringValue
	56, // 15: kk.kkcs.apiresponse.APIResponseKeyInfo.certificate:type_name -> google.protobuf.StringValue
	56, // 16: kk.kkcs.apiresponse.APIResponseKeyInfo.ecPoint:type_name -> google.protobuf.StringValue
	56, // 17: kk.kkcs.apiresponse.APIResponseKeyInfo.ecParams:type_name -> google.protobuf.StringValue
	57, // 18: kk.kkcs.apiresponse.APIResponseKeyInfo.autoRotateDuration:type_name -> google.protobuf.UInt32Value
	57, // 19: kk.kkcs.apiresponse.APIResponseKeyInfo.partitionId:type_name -> google.protobuf.UInt32Value
	56, // 20: kk.kkcs.apiresponse.APIResponseGenerateKey.zipPassword:type_name -> google.protobuf.StringValue
	56, // 21: kk.kkcs.apiresponse.APIResponseGenerateKey.wrappedKeyByExternalKey:type_name -> google.protobuf.StringValue
	56, // 22: kk.kkcs.apiresponse.APIResponseGenerateKey.wrappedKeyByAppstoredKey:type_name -> google.protobuf.StringValue
	56, // 23: kk.kkcs.apiresponse.APIResponseGenerateKeyPair.zipPassword:type_name -> google.protobuf.StringValue
	58, // 24: kk.kkcs.apiresponse.APIResponseCertificateVerify.verified:type_name -> google.protobuf.BoolValue
	56, // 25: kk.kkcs.apiresponse.APIResponseAppstoredGenerateMAC.iv:type_name -> google.protobuf.StringValue
	58, // 26: kk.kkcs.apiresponse.APIResponseAppstoredVerifyMAC.verified:type_name -> google.protobuf.BoolValue
	58, // 27: kk.kkcs.apiresponse.APIResponseAppstoredVerify.verified:type_name -> google.protobuf.BoolValue
	8,  // 28: kk.kkcs.apiresponse.APIResponseAppstoredEncrypt.ciphertext:type_name -> kk.kkcs.apiresponse.SingleCiphertext
	57, // 29: kk.kkcs.apiresponse.APIResponseE2EEReEncryptFromSessionKeyToPermanentKey.keyVersion:type_name -> google.protobuf.UInt32Value
	31, // 30: kk.kkcs.apiresponse.APIResponseE2EEReEncryptFromSessionKeyToPermanentKey.ciphertext:type_name -> kk.kkcs.apiresponse.E2EECiphertext
	55, // 31: kk.kkcs.apiresponse.APIResponseE2EECompare.equivalents:type_name -> kk.kkcs.apiresponse.APIResponseE2EECompare.Equivalent
	31, // 32: kk.kkcs.apiresponse.APIResponseE2EEReEncryptFromPermanentKeyToSessionKey.ciphertext:type_name -> kk.kkcs.apiresponse.E2EECiphertext
	31, // 33: kk.kkcs.apiresponse.APIResponseE2EEEncryptToClientKey.ciphertext:type_name -> kk.kkcs.apiresponse.E2EECiphertext
	59, // 34: kk.kkcs.apiresponse.SDKResponseGeneral.faultCode:type_name -> kk.core.constants.FaultResponseCode
	59, // 35: kk.kkcs.apiresponse.FaultCode.Fault.code:type_name -> kk.core.constants.FaultResponseCode
	58, // 36: kk.kkcs.apiresponse.APIResponseVerifyMAC.Verified.verified:type_name -> google.protobuf.BoolValue
	58, // 37: kk.kkcs.apiresponse.APIResponseE2EECompare.Equivalent.equivalent:type_name -> google.protobuf.BoolValue
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_APIResponse_proto_init() }
func file_APIResponse_proto_init() {
	if File_APIResponse_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_APIResponse_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseRefreshSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseRNG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseSeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseUnseal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleCiphertext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseEncrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseDecrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleMAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseGenerateMAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseVerifyMAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleTokenize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseTokenize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseDetokenize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseKeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseGenerateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseGenerateKeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseCertificateSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseCertificateVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredGenerateMAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredVerifyMAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredSeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredUnseal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredEncrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseAppstoredDecrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseGetSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2EECiphertext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseE2EEReEncryptFromSessionKeyToPermanentKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseE2EECompare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseE2EEReEncryptFromPermanentKeyToSessionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseE2EEDecryptFromSessionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseE2EEEncryptToClientKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseGeneral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseInitEncrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseInitDecrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseMultipartUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseFinalizeEncrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseFinalizeDecrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseDecryptCBC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseInitMACGenerate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseInitMACVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseMultipartMACUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseFinalizeMACGenerate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseFinalizeMACVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseMultipartEncrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseMultipartHMACGenerate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseMultipartHMACVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SDKResponseEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultCode_Fault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseVerifyMAC_Verified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_APIResponse_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponseE2EECompare_Equivalent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_APIResponse_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_APIResponse_proto_goTypes,
		DependencyIndexes: file_APIResponse_proto_depIdxs,
		MessageInfos:      file_APIResponse_proto_msgTypes,
	}.Build()
	File_APIResponse_proto = out.File
	file_APIResponse_proto_rawDesc = nil
	file_APIResponse_proto_goTypes = nil
	file_APIResponse_proto_depIdxs = nil
}
